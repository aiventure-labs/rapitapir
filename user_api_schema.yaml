---
:openapi: 3.0.3
:info:
  :title: User Management API
  :version: 1.0.0
  :description: A simple user management API built with RapiTapir
:servers:
- :url: http://localhost:4567
  :description: Development server (Sinatra)
- :url: http://localhost:9292
  :description: Development server (Rack)
:paths:
  "/users":
    get:
      :summary: List all users
      :description: Returns a list of all users in the system
      :operationId: get_users
      :tags:
      - Users
      :responses:
        '200':
          :description: Successful response
          :content:
            application/json:
              :schema:
                :type: object
                :properties:
                  users:
                    :type: array
                    :items:
                      :type: object
                      :properties:
                        id:
                          :type: integer
                        name:
                          :type: string
                        email:
                          :type: string
                      :required:
                      - id
                      - name
                      - email
                :required:
                - users
    post:
      :summary: Create a new user
      :description: Creates a new user with the provided data
      :operationId: post_users
      :tags:
      - Users
      :requestBody:
        :description: Request body
        :required: true
        :content:
          application/json:
            :schema:
              :type: object
              :properties:
                name:
                  :type: string
                email:
                  :type: string
              :required:
              - name
              - email
      :responses:
        '200':
          :description: Successful response
          :content:
            application/json:
              :schema:
                :type: object
                :properties:
                  id:
                    :type: integer
                  name:
                    :type: string
                  email:
                    :type: string
                :required:
                - id
                - name
                - email
  "/users/{id}":
    get:
      :summary: Get user by ID
      :description: Returns a single user by their ID
      :operationId: get_users_id
      :tags:
      - Users
      :parameters:
      - :name: id
        :in: path
        :required: true
        :description: 'Path parameter: id'
        :schema:
          :type: integer
      :responses:
        '200':
          :description: Successful response
          :content:
            application/json:
              :schema:
                :type: object
                :properties:
                  id:
                    :type: integer
                  name:
                    :type: string
                  email:
                    :type: string
                :required:
                - id
                - name
                - email
    put:
      :summary: Update an existing user
      :description: Updates an existing user with the provided data
      :operationId: put_users_id
      :tags:
      - Users
      :parameters:
      - :name: id
        :in: path
        :required: true
        :description: 'Path parameter: id'
        :schema:
          :type: integer
      :requestBody:
        :description: Request body
        :required: true
        :content:
          application/json:
            :schema:
              :type: object
              :properties:
                name:
                  :type: string
                email:
                  :type: string
              :required:
              - name
              - email
      :responses:
        '200':
          :description: Successful response
          :content:
            application/json:
              :schema:
                :type: object
                :properties:
                  id:
                    :type: integer
                  name:
                    :type: string
                  email:
                    :type: string
                :required:
                - id
                - name
                - email
    delete:
      :summary: Delete a user
      :description: Deletes a user by their ID
      :operationId: delete_users_id
      :tags:
      - Users
      :parameters:
      - :name: id
        :in: path
        :required: true
        :description: 'Path parameter: id'
        :schema:
          :type: integer
      :responses:
        '200':
          :description: Successful response
          :content:
            application/json:
              :schema:
                :type: object
                :properties:
                  message:
                    :type: string
                :required:
                - message
:components:
  :schemas: {}
