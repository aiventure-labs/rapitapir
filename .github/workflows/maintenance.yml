name: 🔧 Dependency Updates

on:
  schedule:
    # Check for dependency updates weekly on Mondays
    - cron: '0 9 * * 1'
  workflow_dispatch:

jobs:
  security-audit:
    name: 🔒 Security Audit
    runs-on: ubuntu-latest
    
    steps:
    - name: 🔄 Checkout code
      uses: actions/checkout@v4
      
    - name: 💎 Set up Ruby
      uses: ruby/setup-ruby@v1
      with:
        ruby-version: '3.2'
        bundler-cache: true
        
    - name: 🔍 Run bundler-audit
      run: |
        gem install bundler-audit
        bundler-audit --update
        bundler-audit
        
    - name: 📊 Generate security report
      run: |
        echo "## 🔒 Security Audit Report" > security-report.md
        echo "Generated on: $(date)" >> security-report.md
        echo "" >> security-report.md
        bundler-audit --format json > audit-results.json || true
        
        if [ -s audit-results.json ]; then
          echo "⚠️ Security vulnerabilities found. Please review." >> security-report.md
        else
          echo "✅ No security vulnerabilities found." >> security-report.md
        fi
        
    - name: 📤 Upload security report
      uses: actions/upload-artifact@v3
      with:
        name: security-report
        path: |
          security-report.md
          audit-results.json

  update-dependencies:
    name: 📦 Update Dependencies
    runs-on: ubuntu-latest
    
    steps:
    - name: 🔄 Checkout code
      uses: actions/checkout@v4
      
    - name: 💎 Set up Ruby
      uses: ruby/setup-ruby@v1
      with:
        ruby-version: '3.2'
        
    - name: 📦 Update bundle
      run: |
        bundle update
        
    - name: 🧪 Run tests with updated dependencies
      run: |
        bundle install
        bundle exec rspec
        
    - name: 📝 Create dependency update PR
      uses: peter-evans/create-pull-request@v5
      with:
        token: ${{ secrets.GITHUB_TOKEN }}
        commit-message: '📦 Update dependencies'
        title: '📦 Automated dependency updates'
        body: |
          ## 📦 Dependency Updates
          
          This PR contains automated dependency updates.
          
          ### 🧪 Test Results
          - ✅ All tests pass with updated dependencies
          - ✅ Security audit clean
          
          ### 🔍 Review Checklist
          - [ ] Review dependency changes
          - [ ] Verify compatibility
          - [ ] Check for breaking changes
          
          Auto-generated by GitHub Actions 🤖
        branch: automated/dependency-updates
        delete-branch: true

  performance-benchmark:
    name: ⚡ Performance Benchmark
    runs-on: ubuntu-latest
    
    steps:
    - name: 🔄 Checkout code
      uses: actions/checkout@v4
      
    - name: 💎 Set up Ruby
      uses: ruby/setup-ruby@v1
      with:
        ruby-version: '3.2'
        bundler-cache: true
        
    - name: ⚡ Run performance benchmarks
      run: |
        # Install benchmark gems
        gem install benchmark-ips memory_profiler
        
        # Create benchmark script
        cat > benchmark.rb << 'EOF'
        require 'benchmark/ips'
        require 'memory_profiler'
        require_relative 'lib/rapitapir'
        
        puts "🦙 RapiTapir Performance Benchmark"
        puts "=" * 50
        
        # Basic endpoint creation benchmark
        Benchmark.ips do |x|
          x.report("endpoint creation") do
            RapiTapir.get('/test')
              .query(:name, :string)
              .ok(RapiTapir::Types.string)
              .build
          end
          
          x.report("type validation") do
            type = RapiTapir::Types.string
            type.validate("test string")
          end
          
          x.compare!
        end
        
        # Memory usage
        report = MemoryProfiler.report do
          100.times do
            RapiTapir.get('/test')
              .query(:name, :string)
              .ok(RapiTapir::Types.string)
              .build
          end
        end
        
        puts "\n📊 Memory Usage Report:"
        puts "Total allocated: #{report.total_allocated_memsize} bytes"
        puts "Total retained: #{report.total_retained_memsize} bytes"
        EOF
        
        ruby benchmark.rb > benchmark-results.txt
        
    - name: 📤 Upload benchmark results
      uses: actions/upload-artifact@v3
      with:
        name: performance-benchmark
        path: benchmark-results.txt
